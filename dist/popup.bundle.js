(()=>{"use strict";const e=document.querySelector("#message");let t=!1;async function o(t){e&&(e.textContent="Checking page readiness...");try{const o=await chrome.tabs.query({active:!0,currentWindow:!0});if(!o||0===o.length||!o[0]?.id)throw new Error("Could not identify active tab.");const r=o[0].id;try{const t=await chrome.tabs.sendMessage(r,{action:"PING"});if("PING"!==t?.status)throw console.error("Ping check failed: Invalid response received:",t),new Error("Page script didn't respond correctly. Try reloading the page.");e&&(e.textContent="Please search for routes in the EDDM Search for Routes input.")}catch(e){throw console.error("Error occurred during PING:",e),e.message.includes("Receiving end does not exist")?new Error("Cannot get routes on EDDM page. Please search for a route."):new Error(`Connection error: ${e.message}`)}chrome.tabs.sendMessage(r,{action:"EXPORT_TYPE",exportType:t},(e=>{chrome.runtime.lastError?console.warn("Error sending EXPORT_TYPE command:",chrome.runtime.lastError.message):console.log("EXPORT_TYPE command sent successfully. Waiting for EXPORT_RESULT.",commandResponse)}))}catch(o){console.error(`Error: Processing ${t}:`,o),e&&(e.textContent=`Error: ${o.message}`)}}chrome.runtime.onMessage.addListener(((t,o,r)=>{if("EXPORT_RESULT"===t.action&&"success"===t.status&&t.data){const o=`eddm_export_${t.exportType||"data"}_${(new Date).toISOString().slice(0,10)}.csv`;try{"all"===t.exportType||"selected"===t.exportType?(function(e,t){if("string"!=typeof e||!e)return console.error("Download error: Invalid or empty CSV content provided."),void alert("Could not download file: No valid data was generated.");"string"==typeof t&&t||(console.warn("Download warning: No filename provided, using default check reference."),t=`export_${(new Date).toISOString().slice(0,10)}.csv`);let o=null;try{const r=new Blob([e],{type:"text/csv;charset=utf-8;"});o=URL.createObjectURL(r);const n=document.createElement("a");n.setAttribute("href",o),n.setAttribute("download",t),n.style.visibility="hidden",document.body.appendChild(n),n.click(),document.body.removeChild(n)}catch(e){console.error("Download error during new Blob/Link creation or click:",e),alert(`Failed to prepare or trigger download: ${e.message}`)}finally{o&&(console.log(`Download: Revoking Object URL: ${o}`),URL.revokeObjectURL(o))}}(t.data,o),e&&(e.textContent=`Downloaded: ${o}`)):"copyAll"===t.exportType||"copySelected"===t.exportType?(n=t.data,navigator.clipboard.writeText(n).then((()=>{console.log("Copied to clipboard!")})).catch((e=>{console.error("Failed to copy:",e)})),e&&(e.textContent=`Copied ${"copyAll"===t.exportType?"all":"selected"} to clipboard.`)):e&&(e.textContent="Please select an option.")}catch(t){e&&(e.textContent=`Download: failed: ${t.message}`)}}var n;return!1})),document.addEventListener("DOMContentLoaded",(function(){if(t)return;const r=document.getElementById("exportSelectedBtn"),n=document.getElementById("copySelectedBtn"),c=document.getElementById("exportAllBtn"),a=document.getElementById("copyAllBtn");if(!(r&&c&&n&&a))return console.error("Setup error from listener."),void(e&&(e.textContent="Error: Correct buttons are missing."));r.addEventListener("click",(()=>o("selected"))),n.addEventListener("click",(()=>o("copySelected"))),c.addEventListener("click",(()=>o("all"))),a.addEventListener("click",(()=>o("copyAll"))),t=!0}),{once:!0}),e&&(e.textContent="Ready to export or copy EDDM routes.")})();