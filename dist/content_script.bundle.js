(()=>{"use strict";const e="table.target-audience-table";let t=!1;t||(t=!0,chrome.runtime.onMessage.addListener(((t,n,r)=>{if("PING"===t.action)return r({status:"PING"}),!0;if("EXPORT_TYPE"===t.action){const n=t.exportType,r=function(t){const n=function(t){const n=document.querySelectorAll(`${e} tbody`);if(!n||0===n.length)return console.error("getRowsToExport: Could not find table body."),alert("Alert: Could not find a valid table."),null;const r=n[0].querySelectorAll("tr.list-items");if("selected"===t||"copySelected"===t){const e=Array.from(r).filter((e=>{const t=e.querySelector("td:first-child input.routeChex");return t&&t.checked}));return 0===e.length?(console.warn("Export: No rows selected."),null):e}return 0===r.length?(console.warn("Export: No rows found in the table"),null):r}(t);if(!n)return null;const r=function(t){const n=[],r=document.querySelector(e);if(!r)return console.error("extractDataFromRows: Could not find table."),[];const o=r.querySelectorAll("thead th");if(o.length>1){const e=Array.from(o).slice(1).map((e=>e.textContent.replace(/\s+/g," ").trim()));n.push(e)}else console.warn("Export: Could not find enough header cells.");return Array.from(t).forEach((e=>{const t=e.querySelectorAll("td");if(!(t.length>2))return null;{const e=n[0]?.length||t.length-2,r=Array.from(t).slice(1,1+e).map((e=>e.textContent.trim()));n.push(r)}})),n}(n);return r.length<=1?(console.warn("Export: No data extracted or only headers found."),null):r.map((e=>e.map((e=>{const t=e.replace(/"/g,'""');return t.includes(",")||t.includes('"')||t.includes("\n")?`"${t}"`:t})).join(","))).join("\n")}(n);return chrome.runtime.sendMessage({action:"EXPORT_RESULT",status:r?"success":"failure",data:r,exportType:n}),!1}})))})();